migrate:
  ## migrate mode
  ## 'immediate' migrate
  ## 'pretend' : just run stage 1 without modifying anything
  ## 'extract' : do not migrate extract image instead
  mode: immediate
  ## where required files are expected
  work_dir: .
  ## migrate all found wifi configurations
  all_wifis: true
  ## automatically reboot into stage 2 after n seconds
  reboot: 5
  log:
    ## use this drive for stage2 persistent logging
    drive: 
    #  uuid: 'F191-95DB'
    #  dev_path: '/dev/sdb1'
    ## stage2 log level (trace, debug, info, warn, error)
    level: debug
  backup:
  ## network manager configuration files
  nwmgr_files:
    # - eth0_static
  ## use internal gzip with dd true | false
  gzip_internal: ~
  ## Extra kernel commandline options
  # kernel_opts: "panic=20"
  ## Use the given device instead of the boot device to flash to
  # force_flash_device: /dev/sda
  ## delay migration by n seconds - workaround for watchdog not disabling
  # delay: 60
  ## by default migration requires some network manager config to be present (eg from wlan or supplied)
  ## set this to false to not require connection files
  require_nwmgr_config: true
  # md5_sums: md5sums.txt
balena:
  image:
    ## use dd / flash balena image
    # dd: balena-cloud-intel-nuc-2.46.0+rev1-v10.6.27.img.gz
  ## config.json file to inject
  config: config.json
  ## application name
  app_name: <insert application name>
  ## check for api connection
  check_api: true
  ## check for vpn connection
  check_vpn: true
  ## timeout for checks
  check_timeout: 20
debug:
  ## don't flash device - terminate stage2 and reboot before flashing
  no_flash: true
